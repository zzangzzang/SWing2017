package com.example.yoon.swing;import android.content.Intent;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.graphics.Color;import android.os.Bundle;import android.os.Environment;import android.support.v7.app.AppCompatActivity;import android.text.SpannableString;import android.text.style.RelativeSizeSpan;import android.util.Log;import android.view.MotionEvent;import android.view.View;import android.widget.FrameLayout;import android.widget.ImageButton;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import android.widget.VideoView;import java.io.File;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Calendar;import static com.example.yoon.swing.RecordActivity.cal;import static java.lang.Math.abs;public class ResultActivity extends AppCompatActivity {    VideoView videoView, provideoView;    FrameLayout frameLayout;    LinearLayout main_layout, video_layout;    LineView lineView1, lineView2;    boolean show1 = false, show2 = false;    ArrayList<ArrayList<Integer>> dataLists1 ,dataLists2;    ArrayList<Integer> right_weight, left_weight;    ArrayList<Integer> pro_right_weight, pro_left_weight;    ImageButton right_arrow, left_arrow;    String ymd;    int FLAG;    int SEQ;    int CLUB;    MyDBHandler dbHandler;    Cursor cursor;    String query;    TextView textView;    int sync_total;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_result);        textView = (TextView)findViewById(R.id.synctext);        right_arrow = (ImageButton)findViewById(R.id.right_arrow);        left_arrow = (ImageButton)findViewById(R.id.left_arrow);        right_weight = new ArrayList<>();        left_weight = new ArrayList<>();        pro_right_weight = new ArrayList<>();        pro_left_weight = new ArrayList<>();        Intent intent = getIntent();        dbHandler = new MyDBHandler(this, null, null, 1);        frameLayout = (FrameLayout)findViewById(R.id.activity_result);        video_layout = (LinearLayout)findViewById(R.id.video_layout);        main_layout = (LinearLayout)findViewById(R.id.main_layout);        SettingBackground();        ymd = intent.getStringExtra("YMD");        FLAG = intent.getIntExtra("FLAG", -1);        SEQ = intent.getIntExtra("SEQ", -1);        CLUB = intent.getIntExtra("CLUB", -1);        if(FLAG == 1){            right_arrow.setVisibility(View.VISIBLE);            left_arrow.setVisibility(View.VISIBLE);            query = "select * from TBL_TRANNING_HEADER where TRAINING_SEQ = \'T20170613163502\'";            SQLiteDatabase db = dbHandler.getWritableDatabase();            cursor = db.rawQuery(query, null);            cursor.moveToFirst();        }        else if(FLAG == 0){            right_arrow.setVisibility(View.INVISIBLE);            left_arrow.setVisibility(View.INVISIBLE);        ///// 내 데이터 set //////////////////////////////////////////////////////////            query = "select * from TBL_TRANNING_DETAIL where TRAINING_SEQ = \'" + ymd + "\'";            Log.d("MY QUERY : ", query);            SQLiteDatabase db = dbHandler.getWritableDatabase();            cursor = db.rawQuery(query, null);            cursor.moveToFirst();            //////////////////////////////반복실행해서 찾기////////////////////////////////////////////////            while (cursor.getCount() == 0) {                query = "select * from TBL_TRANNING_DETAIL where TRAINING_SEQ = \'" + ymd + "\'";                Log.d("MY QUERY : ", query);                db = dbHandler.getWritableDatabase();                cursor = db.rawQuery(query, null);            }//            }//////////////////////////////////////////////////////////////////////////////////////////////            for (int i = 0; i < cursor.getCount(); i++) {                right_weight.add(Integer.parseInt(cursor.getString(3))); // 여기서 왼오 무게확인                left_weight.add(Integer.parseInt(cursor.getString(4))); // 여기서 확인                Log.d("MY RIGHT : ", String.valueOf(right_weight.get(i)));                cursor.moveToNext();            }            //////////////////////////////////////////////////////////////////////////////            /////////////////////////////선수 데이터 set///////////////////////////////////            query = "select * from TBL_PRO_DATA_DETAIL where PRO_ID = \'p00001\'";            cursor = db.rawQuery(query, null);            cursor.moveToFirst();            //////////////////////////////반복실행해서 찾기////////////////////////////////////////////////            while(cursor.getCount() == 0) {                query = "select * from TBL_PRO_DATA_DETAIL where PRO_ID = \'p00001\'";                cursor = db.rawQuery(query, null);            }            //////////////////////////////////////////////////////////////////////////////////////////////            for (int i = 0; i < cursor.getCount(); i++) {                pro_right_weight.add(Integer.parseInt(cursor.getString(2))); // 여기서 왼오 무게확인                pro_left_weight.add(Integer.parseInt(cursor.getString(3))); // 여기서 확인                Log.d("RPO RIGHT : ", String.valueOf(pro_right_weight.get(i)));                cursor.moveToNext();            }        }        ////////////////////////////////////////////////////////////////////////////////////////////        CalSync();        //flag = intent.getIntExtra("FLAG", -1);        videoView = (VideoView)findViewById(R.id.videoView);        lineView1 = (LineView) findViewById(R.id.line_view);        lineView1.setDrawDotLine(true); //optional        lineView1.setShowPopup(LineView.SHOW_POPUPS_NONE); //optional        dataset1();        lineView1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(show1 == false){                    lineView1.setShowPopup(lineView1.SHOW_POPUPS_All);                    show1 = true;                }                else{                    lineView1.setShowPopup(lineView1.SHOW_POPUPS_NONE);                    show1 = false;                }            }        });        int[] colorArray = {Color.parseColor("#e74c3c"),Color.parseColor("#111111")};        lineView1.setColorArray(colorArray);        lineView1.setDataList(dataLists1); //or lineView.setFloatDataList(floatDataLists)        lineView1.setDataOfAGird(40);        lineView2 = (LineView)findViewById(R.id.line_view2);        lineView2.setDrawDotLine(true); //optional        lineView2.setShowPopup(LineView.SHOW_POPUPS_NONE); //optional        dataset2();        lineView2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(show2 == false){                    lineView2.setShowPopup(lineView2.SHOW_POPUPS_All);                    show2 = true;                }                else{                    lineView2.setShowPopup(lineView2.SHOW_POPUPS_NONE);                    show2 = false;                }            }        });        int[] colorArray2 = {Color.parseColor("#2980b9"),Color.parseColor("#111111")};        lineView2.setColorArray(colorArray2);        lineView2.setDataList(dataLists2); //or lineView.setFloatDataList(floatDataLists)        lineView2.setDataOfAGird(40);        ////////////////////////////        String CAPTURE_TITLE;        CAPTURE_TITLE = ymd + ".3gp"; // 여기서 이름만 바꿔주면 특정 동영상 실행가능 넘겨받아야함        Toast.makeText(this, ymd, Toast.LENGTH_SHORT).show();        File file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM), CAPTURE_TITLE);        videoView.setVideoPath(file.getPath());        videoView.start();        /////////////////////////////        videoView.setOnTouchListener(new View.OnTouchListener() {            @Override            public boolean onTouch(View view, MotionEvent motionEvent) {//                String CAPTURE_TITLE = "test.3gp"; // 여기서 이름만 바꿔주면 특정 동영상 실행가능 넘겨받아야함//                File file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM), CAPTURE_TITLE);////                videoView.setVideoPath(file.getPath());//                 videoView.start();                return false;            }        });        right_arrow.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if(SEQ == 5)                    ;                else{                    Intent intent1 = new Intent(ResultActivity.this, ResultActivity.class);                    intent1.putExtra("YMD", "T" + ymd);                    intent1.putExtra("FLAG", 1);                    intent1.putExtra("SEQ", SEQ + 1);                    Log.d("SEQQQQQQQQQQQQQQ", (String.valueOf(SEQ + 1)));                    startActivity(intent1);                    finish();                }            }        });        left_arrow.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if(SEQ == 1)                    ;                else{                    Intent intent1 = new Intent(ResultActivity.this, ResultActivity.class);                    intent1.putExtra("YMD", "T" + ymd);                    intent1.putExtra("FLAG", 1);                    intent1.putExtra("SEQ", SEQ - 1);                    Log.d("SEQQQQQQQQQQQQQQ", (String.valueOf(SEQ - 1)));                    startActivity(intent1);                    finish();                }            }        });    }    public void CalSync(){        int SIZE = 50;        double right_sum = 0, left_sum = 0;        for(int i = 0; i < SIZE; i++){            right_sum += (double)(( 100 * (pro_right_weight.get(i) - abs(pro_right_weight.get(i) - right_weight.get(i)))) / pro_right_weight.get(i));            left_sum += (double)(( 100 * (pro_left_weight.get(i) - abs(pro_left_weight.get(i) - left_weight.get(i)))) / pro_left_weight.get(i));        }        sync_total = (int) ( right_sum + left_sum ) / 100;        Log.d("TOTAL : ", String.valueOf(sync_total));        SpannableString syncText = new SpannableString(sync_total + "%");        syncText.setSpan(new RelativeSizeSpan(0.6f),2,3,0);        textView.setText(syncText);    }    public void SettingBackground(){        cal = Calendar.getInstance();        String strDateFormat = "HH";        SimpleDateFormat sdf = new SimpleDateFormat(strDateFormat);        String hour_string = sdf.format(cal.getTime());        int hour = Integer.parseInt(hour_string);        Log.d("HOUR : ", hour_string);        if(hour >= 6 && hour < 14 && MainActivity.ThemaType == 0 || MainActivity.ThemaType == 1){            frameLayout.setBackgroundResource(R.drawable.mainback3);        }else if(hour >= 14 && hour < 18 && MainActivity.ThemaType == 0 || MainActivity.ThemaType == 2){            frameLayout.setBackgroundResource(R.drawable.back22);        }else if(hour >= 18 && hour <6 && MainActivity.ThemaType == 0 || MainActivity.ThemaType == 3){            frameLayout.setBackgroundResource(R.drawable.back32);        }    }    void dataset1(){        ArrayList<String> strList = new ArrayList<>();        strList.add("1");        strList.add("2");        strList.add("3");        strList.add("4");        strList.add("5");        strList.add("6");        strList.add("7");        strList.add("8");        strList.add("9");        strList.add("10");        lineView1.setBottomTextList(strList);        lineView1.setColorArray(new int[]{Color.BLACK,Color.GRAY});        dataLists1 = new ArrayList<>();        ArrayList<Integer> intlist = new ArrayList<>();        for(int i = 0 ; i < 50; i++){            if( i % 5 == 0 ) {                intlist.add(right_weight.get(i));            }        }        dataLists1.add(intlist);        ArrayList<Integer> intlist2 = new ArrayList<>();        for(int i = 0 ; i < 50; i++){            if( i % 5 == 0 ) {                intlist2.add(pro_right_weight.get(i));            }        }        dataLists1.add(intlist2);    }    void dataset2() {        ArrayList<String> strList = new ArrayList<>();        strList.add("1");        strList.add("2");        strList.add("3");        strList.add("4");        strList.add("5");        strList.add("6");        strList.add("7");        strList.add("8");        strList.add("9");        strList.add("10");        lineView2.setBottomTextList(strList);        lineView2.setColorArray(new int[]{Color.BLACK, Color.GRAY});        dataLists2 = new ArrayList<>();        ArrayList<Integer> intlist = new ArrayList<>();        for(int i = 0 ; i < 50; i++){            if( i % 5 == 0 ) {                intlist.add(left_weight.get(i));            }        }        dataLists2.add(intlist);        ArrayList<Integer> intlist2 = new ArrayList<>();        for(int i = 0 ; i < 50; i++){            if( i % 5 == 0 ) {                intlist2.add(pro_left_weight.get(i));            }        }        dataLists2.add(intlist2);    }    @Override    public void onBackPressed() {        super.onBackPressed();        finish();    }    public void showVideo(View view) {        videoView.pause();        videoView.setVisibility(View.INVISIBLE);        main_layout.setAlpha((float)0.3);        video_layout.setVisibility(View.VISIBLE);        provideoView = (VideoView)findViewById(R.id.provideoView);        String CAPTURE_TITLE;        if(CLUB == 1)            CAPTURE_TITLE = "fisrt_iron.mp4";        else            CAPTURE_TITLE = "seven_iron.mp4";// 여기서 이름만 바꿔주면 특정 동영상 실행가능 넘겨받아야함        Toast.makeText(this, ymd, Toast.LENGTH_SHORT).show();        File file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM), CAPTURE_TITLE);        provideoView.setVideoPath(file.getPath());        provideoView.start();    }}